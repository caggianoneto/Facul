--===================================================
-- TRANSAÇÃO
--===================================================
A - ATOMICIDADE
C - CONSISTÊNCIA
I - ISOLAMENTO
D - DURABILIDADE

CREATE TABLE #TBTRANSACAO(
	ID		INT IDENTITY,
	NUM		INT
)

SELECT * FROM #TBTRANSACAO

INSERT INTO #TBTRANSACAO VALUES (20)
INSERT INTO #TBTRANSACAO VALUES (875)

INSERT INTO #TBTRANSACAO VALUES (56)
INSERT INTO #TBTRANSACAO VALUES (98)
INSERT INTO #TBTRANSACAO VALUES (987398741928374091)
INSERT INTO #TBTRANSACAO VALUES (74)

-- OPERAÇÕES DENTRO DE UMA TRANSAÇÃO
BEGIN TRANSACTION
BEGIN TRY
	INSERT INTO #TBTRANSACAO VALUES (22)
	INSERT INTO #TBTRANSACAO VALUES (33)
	INSERT INTO #TBTRANSACAO VALUES (654987632165484)
	INSERT INTO #TBTRANSACAO VALUES (55)
END TRY
BEGIN CATCH
	SELECT
		ERROR_SEVERITY()	AS ERRORSEVERITY,
		ERROR_STATE()		AS ERRORSTATE,
		ERROR_PROCEDURE()	AS ERRORPROCEDURE,
		ERROR_NUMBER()		AS ERRORNUMBER,
		ERROR_LINE()		AS ERRORLINE,
		ERROR_MESSAGE()		AS ERRORMESSAGE

		ROLLBACK TRANSACTION	-- DESFAZ A TRANSAÇÃO
END CATCH

IF (@@TRANCOUNT > 0)	-- NÚMERO DE TRANSAÇÕES ATIVAS
	COMMIT TRANSACTION	-- CONFIRMA A TRANSAÇÃO


BEGIN TRANSACTION TR_01
	INSERT INTO #TBTRANSACAO VALUES (900)
	ROLLBACK
GO

/* CRIAR UMA TRANSAÇÃO COM O NOME DE
	TR_ATUALIZAESTOQUE PARA FAZER UM UPDATE
	NA TABELA PRODUTO E ATUALIZAR O CAMPO
	QTDEESTOQUE PARA A QUANTIDADE EXISTENTE
	MENOS 50 UNIDADES DO PRODUTO ID = 7.
	APÓS ESTA OPERAÇÃO, VERIFICAR SE O CAMPO
	QTDEESTOQUE FICOU MENOR QUE 0, SE FICOU ENTÃO
	EMITIR UMA MENSAGEM DE ERRO E DESFAZER A 
	TRANSAÇÃO, SENÃO ENTÃO EMITIR UMA MENSAGEM
	DE SUCESSO E CONFIRMAR A TRANSAÇÃO.
*/
BEGIN TRANSACTION TR_ATUALIZAESTOQUE
	UPDATE PRODUTO
		SET QTDEESTOQUE = QTDEESTOQUE - 50
		WHERE IDPRODUTO = 7

	IF ((SELECT QTDEESTOQUE FROM PRODUTO
			WHERE IDPRODUTO = 7) < 0)
	BEGIN
		PRINT 'ESTOQUE NÃO ATUALIZA PORQUE'
		PRINT 'NÃO PODE FICAR COM QTDE NEGATIVA'
		ROLLBACK TRANSACTION TR_ATUALIZAESTOQUE
	END
	ELSE
	BEGIN
		PRINT 'ESTOQUE ATUALIZADO'
		COMMIT TRANSACTION
	END

































